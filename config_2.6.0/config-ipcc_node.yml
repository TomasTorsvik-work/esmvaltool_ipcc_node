################################################################################
# User's configuration file for ESMValTool
################################################################################
---

# Rootpaths to the data from different projects (lists are also possible)
rootpath:
  CMIP3: ~/default_cmip3
  CMIP5: [/projects/NS9252K/ESGF_betzy/cmip5/output1,
          /projects/NS9252K/ESGF_betzy/cmip5/output2,
          /projects/NS9034K/CMIP5/output1,
          /projects/NS9034K/CMIP5/output2]
  CMIP6: [/projects/NS9252K/ESGF_betzy/CMIP6,
          /projects/NS9034K/CMIP6]
  OBS: /projects/NS9252K/ESGF_betzy/obsdata
  OBS6: /projects/NS9252K/ESGF_betzy/obsdata
  obs4MIPs: /projects/NS9252K/ESGF_betzy/obsdata
  ana4mips: ~/default_ana4mips
  native6: ~/default_native6
  RAWOBS: /projects/NS9252K/ESGF_betzy/rawdata/obs
  default: ~/default_inputpath

# Directory structure for input data: [default]/BADC/DKRZ/ETHZ/etc
# See config-developer.yml for definitions.
drs:
  CMIP5: DKRZ
  CMIP6: DKRZ
  OBS6: default
  obs4MIPs: default

# Destination directory where all output will be written
# Includes log files and performance stats.
output_dir: /projects/NS2980K/www/${USER}/esmvaltool2.6.0

# Directory for storing downloaded climate data
download_dir: ~/climate_data

# Auxiliary data directory (used for some additional datasets)
# this is where e.g. files can be downloaded to by a download
# script embedded in the diagnostic
#auxiliary_data_dir: ~/esmvaltool/auxiliary_data
#auxiliary_data_dir: ./auxiliary_data
auxiliary_data_dir: /projects/NS9252K/share/esmvaltool/auxiliary_data

# Run at most this many tasks in parallel null/[1]/2/3/4/..
# Set to null to use the number of available CPUs.
# Make sure your system has enough memory for the specified number of tasks.
max_parallel_tasks: 1

# Diagnostics create plots? [true]/false
# turning it off will turn off graphical output from diagnostic
#write_plots: true

# Diagnositcs write NetCDF files? [true]/false
# turning it off will turn off netCDF output from diagnostic
#write_netcdf: true

# Log level of the console --- debug/[info]/warning/error
# For much more information printed to screen set log_level to ``debug``.
log_level: info

# Exit on warning --- true/[false]
# # Only used in NCL diagnostic scripts.
exit_on_warning: false

# Plot file format --- [png]/pdf/ps/eps/epsi
output_file_type: png

# Remove the ``preproc`` directory if the run was successful --- [true]/false
# By default this option is set to ``true``, so all preprocessor output files
# will be removed after a successful run. Set to ``false`` if you need those
# files.
remove_preproc_dir: true

# Use netCDF compression --- true/[false]
compress_netcdf: false

# Save intermediary cubes in the preprocessor --- true/[false]
# Setting this to ``true`` will save the output cube from each preprocessing
# step. These files are numbered according to the preprocessing order.
save_intermediary_cubes: false

# Path to custom ``config-developer.yml`` file
# This can be used to customise project configurations. See
# ``config-developer.yml`` for an example. Set to ``null`` to use the default.
config_developer_file: null

# Use a profiling tool for the diagnostic run --- [false]/true
# A profiler tells you which functions in your code take most time to run.
# Only available for Python diagnostics.
profile_diagnostic: false
